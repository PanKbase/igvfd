{
  "title": "Human Beta Cell Line",
  "$id": "/profiles/human_beta_cell_line.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "A human beta cell line biosample derived from pancreatic beta cells, specifically designed for diabetes and pancreatic function research.",
  "type": "object",
  "required": [
    "award",
    "classifications",
    "description",
    "donors",
    "lab",
    "sample_name",
    "sample_terms",
    "sources"
  ],
  "identifyingProperties": [
    "accession",
    "aliases",
    "alternate_accessions",
    "uuid"
  ],
  "additionalProperties": false,
  "mixinProperties": [
    {
      "$ref": "sample.json#/properties"
    },
    {
      "$ref": "biosample.json#/properties"
    },
    {
      "$ref": "mixins.json#/basic_item"
    },
    {
      "$ref": "mixins.json#/accession"
    },
    {
      "$ref": "mixins.json#/attribution"
    },
    {
      "$ref": "mixins.json#/documents"
    },
    {
      "$ref": "mixins.json#/product_info"
    },
    {
      "$ref": "mixins.json#/url"
    },
    {
      "$ref": "mixins.json#/taxa"
    },
    {
      "$ref": "mixins.json#/publication_identifiers"
    },
    {
      "$ref": "mixins.json#/release_timestamp"
    }
  ],
  "dependentSchemas": {
    "lot_id": {
      "comment": "Specification of lot_id requires product_id.",
      "required": [
        "product_id"
      ]
    },
    "sorted_from": {
      "comment": "Specification of sorted_from requires sorted_from_detail.",
      "required": [
        "sorted_from_detail"
      ]
    },
    "sorted_from_detail": {
      "comment": "Specification of sorted_from_detail requires sorted_from.",
      "required": [
        "sorted_from"
      ]
    },
    "starting_amount": {
      "comment": "Specification of starting_amount requires starting_amount_units.",
      "required": [
        "starting_amount_units"
      ]
    },
    "starting_amount_units": {
      "comment": "Specification of starting_amount_units requires starting_amount.",
      "required": [
        "starting_amount"
      ]
    },
    "moi": {
      "comment": "Specification of moi requires construct_library_sets.",
      "required": [
        "construct_library_sets"
      ]
    },
    "time_post_library_delivery": {
      "comment": "Specification of time_post_library_delivery requires time_post_library_delivery_units and construct_library_sets.",
      "required": [
        "time_post_library_delivery_units",
        "construct_library_sets"
      ]
    },
    "time_post_library_delivery_units": {
      "comment": "Specification of time_post_library_delivery_units requires time_post_library_delivery and construct_library_sets.",
      "required": [
        "time_post_library_delivery",
        "construct_library_sets"
      ]
    },
    "lower_bound_age": {
      "comment": "A biosample with a defined lower_bound_age requires upper_bound_age and age_units.",
      "required": [
        "upper_bound_age",
        "age_units"
      ]
    },
    "upper_bound_age": {
      "comment": "A biosample with a defined upper_bound_age requires lower_bound_age and age_units.",
      "required": [
        "lower_bound_age",
        "age_units"
      ]
    },
    "age_units": {
      "comment": "A biosample with defined age_units requires lower_bound_age and upper_bound_age.",
      "required": [
        "lower_bound_age",
        "upper_bound_age"
      ]
    },
    "status": {
      "comment": "Release, archived and revoked status should have release_timestamp specified.",
      "oneOf": [
        {
          "required": [
            "release_timestamp"
          ],
          "properties": {
            "status": {
              "enum": [
                "revoked",
                "archived",
                "released"
              ]
            }
          }
        },
        {
          "properties": {
            "status": {
              "enum": [
                "in progress",
                "deleted",
                "replaced"
              ]
            }
          }
        }
      ]
    },
    "release_timestamp": {
      "comment": "Release timestamp is required if status is released, revoked or archived.",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "enum": [
            "revoked",
            "archived",
            "released"
          ]
        }
      }
    },
    "passage_number": {
      "comment": "A cell line biosample with passage_number requires growth_medium.",
      "required": [
        "growth_medium"
      ]
    }
  },
  "properties": {
    "release_timestamp": {
      "title": "Release Timestamp",
      "description": "The date the object was released.",
      "comment": "Do not submit. The date the object is released is assigned by the server.",
      "type": "string",
      "format": "date-time",
      "permission": "admin_only"
    },
    "publication_identifiers": {
      "title": "Publication Identifiers",
      "description": "The publication identifiers that provide more information about the object.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Publication Identifier",
        "description": "A publication identifier that provides more information about the object.",
        "type": "string",
        "pattern": "^(PMID:[0-9]+|doi:10\\.[0-9]{4}[\\d\\s\\S:\\.\\/]+|PMCID:PMC[0-9]+|[0-9]{4}\\.[0-9]{4})$"
      },
      "submissionExample": {
        "appscript": "[\"10.1016/j.cell.2023.02.018\", \"PMID:37001506\", \"PMCID:PMC8495978\"]",
        "igvf_utils": "10.1016/j.cell.2023.02.018, PMID:37001506, PMCID:PMC8495978"
      }
    },
    "taxa": {
      "title": "Taxa",
      "type": "string",
      "description": "The species of the organism.",
      "enum": [
        "Homo sapiens",
        "Mus musculus"
      ],
      "notSubmittable": true
    },
    "url": {
      "@type": "@id",
      "rdfs:subPropertyOf": "rdfs:seeAlso",
      "title": "URL",
      "description": "An external resource with additional information.",
      "type": "string",
      "format": "uri",
      "submissionExample": {
        "appscript": "https://github.com/PanKbase-DB/igvfd",
        "igvf_utils": "https://github.com/PanKbase-DB/igvfd"
      }
    },
    "sources": {
      "title": "Sources",
      "description": "The originating lab(s) or vendor(s).",
      "type": "array",
      "minItems": 1,
      "maxItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Source",
        "description": "The originating lab or vendor.",
        "type": "string",
        "comment": "See source.json or lab.json for available identifiers.",
        "linkTo": [
          "Source",
          "Lab"
        ]
      },
      "submissionExample": {
        "appscript": "[\"/labs/john-doe/\", \"/sources/abcam/\"]",
        "igvf_utils": "/labs/john-doe/, /sources/abcam/"
      }
    },
    "lot_id": {
      "title": "Lot ID",
      "description": "The lot identifier provided by the originating lab or vendor.",
      "type": "string",
      "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
      "submissionExample": {
        "appscript": "59300853",
        "igvf_utils": "59300853"
      }
    },
    "product_id": {
      "title": "Product ID",
      "description": "The product identifier provided by the originating lab or vendor.",
      "type": "string",
      "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
      "submissionExample": {
        "appscript": "59300851",
        "igvf_utils": "59300851"
      }
    },
    "documents": {
      "title": "Documents",
      "description": "Documents that provide additional information (not data file).",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Document",
        "description": "A document that provides additional information (not data file).",
        "type": "string",
        "comment": "See document.json for available identifiers.",
        "linkTo": "Document"
      },
      "submissionExample": {
        "appscript": "[\"john-doe:document01\", \"/documents/ed53a041-bd66-4afc-938d-d75eeede26da/\"]",
        "igvf_utils": "john-doe:document01, /documents/ed53a041-bd66-4afc-938d-d75eeede26da/"
      }
    },
    "lab": {
      "title": "Lab",
      "description": "Lab associated with the submission.",
      "comment": "Required. See lab.json for list of available identifiers.",
      "type": "string",
      "linkTo": "Lab",
      "linkSubmitsFor": true,
      "submissionExample": {
        "appscript": "/labs/john-doe/",
        "igvf_utils": "/labs/john-doe/"
      }
    },
    "award": {
      "title": "Award",
      "description": "Grant associated with the submission.",
      "comment": "Required. See award.json for list of available identifiers.",
      "type": "string",
      "linkTo": "Award",
      "submissionExample": {
        "appscript": "/awards/HG012012/",
        "igvf_utils": "/awards/HG012012/"
      }
    },
    "accession": {
      "title": "Accession",
      "description": "A unique identifier to be used to reference the object prefixed with PKB.",
      "comment": "Do not submit. The accession is assigned by the server.",
      "type": "string",
      "format": "accession",
      "serverDefault": "accession",
      "permission": "admin_only",
      "accessionType": "SM"
    },
    "alternate_accessions": {
      "title": "Alternate Accessions",
      "description": "Accessions previously assigned to objects that have been merged with this object.",
      "comment": "Do not submit. Only admins are allowed to set or update this value.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "permission": "admin_only",
      "items": {
        "title": "Alternate Accession",
        "description": "An accession previously assigned to an object that has been merged with this object.",
        "comment": "Only accessions of objects that have status equal replaced will work here.",
        "type": "string",
        "format": "accession"
      }
    },
    "collections": {
      "title": "Collections",
      "description": "Some samples are part of particular data collections.",
      "comment": "Do not submit. Collections are for DACC use only.",
      "type": "array",
      "minItems": 1,
      "permission": "admin_only",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "ClinGen",
          "ENCODE",
          "GREGoR",
          "IGVF_catalog_beta_v0.1",
          "IGVF_catalog_beta_v0.2",
          "IGVF_catalog_beta_v0.3",
          "IGVF_catalog_beta_v0.4",
          "MaveDB",
          "IIDP",
          "HPAP",
          "ADI",
          "nPOD",
          "Prodo",
          "Prodo Laboratories",
          "PanKbase",
          "IsletCore",
          "MPRAbase",
          "Vista"
        ]
      }
    },
    "status": {
      "title": "Status",
      "type": "string",
      "permission": "admin_only",
      "default": "in progress",
      "description": "The status of the metadata object.",
      "comment": "Do not submit.  This is set by admins along the process of metadata submission.",
      "enum": [
        "in progress",
        "released",
        "deleted",
        "replaced",
        "revoked",
        "archived"
      ]
    },
    "revoke_detail": {
      "title": "Revoke Detail",
      "type": "string",
      "permission": "admin_only",
      "description": "Explanation of why an object was transitioned to the revoked status.",
      "comment": "Do not submit. This is set by admins when an object is revoked.",
      "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$"
    },
    "schema_version": {
      "title": "Schema Version",
      "description": "The version of the JSON schema that the server uses to validate the object.",
      "comment": "Do not submit. The version used to validate the object is set by the server. The default should be set to the current version.",
      "type": "string",
      "pattern": "^\\d+(\\.\\d+)*$",
      "permission": "admin_only",
      "requestMethod": [],
      "default": "1"
    },
    "uuid": {
      "title": "UUID",
      "description": "The unique identifier associated with every object.",
      "comment": "Do not submit. The uuid is set by the server.",
      "type": "string",
      "format": "uuid",
      "serverDefault": "uuid4",
      "permission": "admin_only",
      "requestMethod": "POST"
    },
    "notes": {
      "title": "Notes",
      "description": "DACC internal notes.",
      "comment": "Do not submit. A place for the DACC to keep information that does not have a place in the schema.",
      "type": "string",
      "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
      "permission": "admin_only"
    },
    "aliases": {
      "title": "Aliases",
      "description": "Lab specific identifiers to reference an object.",
      "comment": "The purpose of this field is to provide a link into the lab LIMS and to facilitate shared objects.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "uniqueKey": "alias",
        "title": "Lab Alias",
        "description": "A lab specific identifier to reference an object.",
        "comment": "Current convention is colon separated lab name and lab identifier. (e.g. john-doe:42).",
        "type": "string",
        "pattern": "^(?:j-michael-cherry|ali-mortazavi|barbara-wold|lior-pachter|grant-macgregor|kim-green|mark-craven|qiongshi-lu|audrey-gasch|robert-steiner|jesse-engreitz|thomas-quertermous|anshul-kundaje|michael-bassik|will-greenleaf|marlene-rabinovitch|lars-steinmetz|jay-shendure|nadav-ahituv|martin-kircher|danwei-huangfu|michael-beer|anna-katerina-hadjantonakis|christina-leslie|alexander-rudensky|joyce-niland|IIDP|PRODO|HPAP|nPOD|ADI|laura-donlin|hannah-carter|bing-ren|kyle-gaulton|steve-parker|pankbase-consortium|klaus-kaestner|macdonald|atkinson|prodo|maike-sander|charles-gersbach|gregory-crawford|tim-reddy|ansuman-satpathy|andrew-allen|gary-hon|nikhil-munshi|maria-chahrour|w-lee-kraus|lea-starita|doug-fowler|luca-pinello|guillaume-lettre|benhur-lee|daniel-bauer|richard-sherwood|benjamin-kleinstiver|marc-vidal|david-hill|frederick-roth|mikko-taipale|anne-carpenter|hyejung-won|karen-mohlke|michael-love|jason-buenrostro|bradley-bernstein|hilary-finucane|chongyuan-luo|noah-zaitlen|kathrin-plath|roy-wollman|jason-ernst|zhiping-weng|manuel-garber|xihong-lin|alan-boyle|ryan-mills|jie-liu|maureen-sartor|joshua-welch|stephen-montgomery|alexis-battle|livnat-jerby|jonathan-pritchard|predrag-radivojac|sean-mooney|harinder-singh|nidhi-sahni|jishnu-das|hao-wu|sreeram-kannan|hongjun-song|alkes-price|soumya-raychaudhuri|shamil-sunyaev|len-pennacchio|axel-visel|jill-moore|ting-wang|feng-yue|buenrostro-bernstein|igvf|pankbase|igvf-dacc):[a-zA-Z\\d_$.+!*,()'-]+(?:\\s[a-zA-Z\\d_$.+!*,()'-]+)*$"
      },
      "submissionExample": {
        "appscript": "[\"john-doe:aliases01\", \"john-doe:aliases02\"]",
        "igvf_utils": "john-doe:aliases01, john-doe:aliases02"
      }
    },
    "creation_timestamp": {
      "rdfs:subPropertyOf": "dc:created",
      "title": "Creation Timestamp",
      "description": "The date the object was created.",
      "comment": "Do not submit. The date the object is created is assigned by the server.",
      "type": "string",
      "format": "date-time",
      "serverDefault": "now",
      "permission": "admin_only"
    },
    "submitted_by": {
      "rdfs:subPropertyOf": "dc:creator",
      "title": "Submitted By",
      "description": "The user who submitted the object.",
      "comment": "Do not submit. The user that created the object is assigned by the server.",
      "type": "string",
      "linkTo": "User",
      "serverDefault": "userid",
      "permission": "admin_only"
    },
    "submitter_comment": {
      "title": "Submitter Comment",
      "description": "Additional information specified by the submitter to be displayed as a comment on the portal.",
      "type": "string",
      "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
      "submissionExample": {
        "appscript": "this is a submitter comment",
        "igvf_utils": "this is a submitter comment"
      }
    },
    "description": {
      "title": "Description",
      "description": "A plain text description of the object.",
      "type": "string",
      "pattern": "^(\\S+(\\s|\\S)*\\S+|\\S)$",
      "submissionExample": {
        "appscript": "this is a description",
        "igvf_utils": "this is a description"
      }
    },
    "lower_bound_age": {
      "title": "Lower Bound Age",
      "description": "Lower bound of age of the organism at the time of collection of the sample.",
      "comment": "To submit a biosample with a singular, defined age lower_bound_age and upper_bound_age should be equal. For samples from human donors older than 89 years, the lower bound of age has to be 90 and upper bound has to be 90, for de-identification purposes.",
      "type": "number",
      "submissionExample": {
        "appscript": 1,
        "igvf_utils": 1
      }
    },
    "upper_bound_age": {
      "title": "Upper Bound Age",
      "description": "Upper bound of age of the organism at the time of collection of the sample.",
      "comment": "To submit a biosample with a singular, defined age lower_bound_age and upper_bound_age should be equal. For samples from human donors older than 89 years, the lower bound of age has to be 90 and upper bound has to be 90, for de-identification purposes.",
      "type": "number",
      "submissionExample": {
        "appscript": 21,
        "igvf_utils": 21
      }
    },
    "age_units": {
      "title": "Age Units",
      "description": "The units of time associated with age of the biosample.",
      "type": "string",
      "enum": [
        "minute",
        "hour",
        "day",
        "week",
        "month",
        "year"
      ],
      "submissionExample": {
        "appscript": "year",
        "igvf_utils": "year"
      }
    },
    "sample_terms": {
      "title": "Sample Terms",
      "description": "Ontology terms identifying a biosample.",
      "type": "array",
      "minItems": 1,
      "maxItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Sample Term",
        "description": "Ontology term identifying a biosample.",
        "type": "string",
        "comment": "See sample_term.json for available identifiers.",
        "linkTo": "SampleTerm"
      },
      "submissionExample": {
        "appscript": "[\"/sample-terms/UBERON_0002369/\"]",
        "igvf_utils": "/sample-terms/UBERON_0002369/"
      }
    },
    "disease_terms": {
      "title": "Disease Terms",
      "description": "Ontology term of the disease associated with the biosample.",
      "comment": "This property should only be used to submit existing known diseases, and not any phenotypic trait.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Disease Term",
        "comment": "See phenotype_term.json for available identifiers.",
        "type": "string",
        "linkTo": "PhenotypeTerm"
      },
      "submissionExample": {
        "appscript": "[\"/phenotype-terms/MONDO_0008564/\", \"/phenotype-terms/MONDO_0005148/\"]",
        "igvf_utils": "/phenotype-terms/MONDO_0008564/, /phenotype-terms/MONDO_0005148/"
      }
    },
    "pooled_from": {
      "title": "Biosamples Pooled From",
      "description": "The biosamples this biosample is pooled from.",
      "type": "array",
      "uniqueItems": true,
      "minItems": 2,
      "items": {
        "title": "Biosample Pooled From",
        "description": "Pooled biosample.",
        "comment": "See biosample.json for available identifiers.",
        "type": "string",
        "linkTo": "Biosample"
      },
      "submissionExample": {
        "appscript": "[\"TSTSM02881437\", \"john-doe:tissue01\"]",
        "igvf_utils": "TSTSM02881437, john-doe:tissue01"
      }
    },
    "part_of": {
      "title": "Part of Biosample",
      "description": "Links to a biosample which represents a larger sample from which this sample was taken regardless of whether it is a tissue taken from an organism or smaller slices of a piece of tissue or aliquots of a cell growth.",
      "comment": "For differentiation, reprogramming, or introduction of a genetic modification use `originated_from` instead. Biosample parts should have identical metadata properties as their parent.",
      "type": "string",
      "linkTo": "Biosample",
      "submissionExample": {
        "appscript": "TSTSM02881437 or john-doe:tissue01",
        "igvf_utils": "TSTSM02881437 or john-doe:tissue01"
      }
    },
    "originated_from": {
      "title": "Originated From",
      "description": "Links to a biosample that was originated from due to differentiation, dedifferentiation, reprogramming, or the introduction of a genetic modification.",
      "type": "string",
      "linkTo": "Biosample",
      "submissionExample": {
        "appscript": "TSTSM02881437 or john-doe:tissue01",
        "igvf_utils": "TSTSM02881437 or john-doe:tissue01"
      }
    },
    "treatments": {
      "title": "Treatments",
      "description": "A list of treatments applied to the biosample with the purpose of perturbation.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Treatment",
        "comment": "See treatment.json for available identifiers.",
        "type": "string",
        "linkTo": "Treatment"
      },
      "submissionExample": {
        "appscript": "[\"john-doe:treatment01\", \"/treatments/ffe525b2-bd67-4021-835e-29748513b560/\"]",
        "igvf_utils": "john-doe:treatment01, /treatments/ffe525b2-bd67-4021-835e-29748513b560/"
      }
    },
    "donors": {
      "title": "Donors",
      "description": "Donor(s) the sample was derived from.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Donor",
        "description": "Donor.",
        "comment": "See concrete class human_donor.json or rodent_donor.json for available identifiers.",
        "type": "string",
        "linkTo": "Donor"
      },
      "submissionExample": {
        "appscript": "[\"pankbase:donor_of_HepG2\", \"/PKBDO2837BRET\"]",
        "igvf_utils": "igvf:donor_of_HepG2, IGVFDO2837BRET"
      }
    },
    "biomarkers": {
      "title": "Biomarkers",
      "description": "Biological markers that are associated with this sample.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Biomarker",
        "description": "Associated biomarker.",
        "type": "string",
        "linkTo": "Biomarker"
      },
      "submissionExample": {
        "appscript": "[\"igvf:biomarker01\", \"/biomarkers/ead6e36b-774e-4d34-9247-1bb02833d77d/\"]",
        "igvf_utils": "igvf:biomarker01, /biomarkers/ead6e36b-774e-4d34-9247-1bb02833d77d/"
      }
    },
    "embryonic": {
      "title": "Embryonic",
      "description": "Biosample is embryonic.",
      "type": "boolean",
      "submissionExample": {
        "appscript": false,
        "igvf_utils": false
      }
    },
    "modifications": {
      "title": "Modifications",
      "description": "Links to modifications applied to this biosample.",
      "type": "array",
      "minItems": 1,
      "maxItems": 2,
      "uniqueItems": true,
      "items": {
        "title": "Modification",
        "description": "Link to a modification applied to this biosample.",
        "type": "string",
        "comment": "See modification.json for available identifiers.",
        "linkTo": [
          "CrisprModification",
          "Modification"
        ]
      },
      "submissionExample": {
        "appscript": "[\"john-doe:modification01\", \"/modifications/ad8f26b5-4180-4301-97a4-38459ddf3dab/\"]",
        "igvf_utils": "john-doe:modification01, /modifications/ad8f26b5-4180-4301-97a4-38459ddf3dab/"
      }
    },
    "cellular_sub_pool": {
      "title": "Cellular Sub Pool",
      "description": "Cellular sub-pool fraction of the sample. Also known as PKR and sub-library.",
      "comment": "Barcodes coming from different cellular sub-pools could not be directly comparable due to the higher probability of collisions. Examples of valid identifiers are: 8A, LW231-2, SS-PKR_1, 4e.AB(678), etc.",
      "type": "string",
      "pattern": "^[a-zA-Z\\d_.()-]+(?:\\s[a-zA-Z\\d_.()-]+)*$",
      "submissionExample": {
        "appscript": "subPool_1234",
        "igvf_utils": "subPool_l1234"
      }
    },
    "starting_amount": {
      "title": "Starting Amount",
      "description": "The initial quantity of samples obtained.",
      "comment": "A sample with starting_amount must include starting_amount_units.",
      "type": "number",
      "submissionExample": {
        "appscript": 4000000,
        "igvf_utils": 4000000
      }
    },
    "starting_amount_units": {
      "title": "Starting Amount Units",
      "description": "The units used to quantify the amount of samples obtained.",
      "comment": "A sample with starting_amount_units must include starting_amount.",
      "type": "string",
      "enum": [
        "cells",
        "cells/ml",
        "g",
        "items",
        "mg",
        "whole animals",
        "whole embryos",
        "μg",
        "ng"
      ],
      "submissionExample": {
        "appscript": "cells",
        "igvf_utils": "cells"
      }
    },
    "dbxrefs": {
      "@type": "@id",
      "rdfs:subPropertyOf": "rdfs:seeAlso",
      "title": "External Resources",
      "description": "Biosample identifiers from external resources, such as Biosample database or Cellosaurus.",
      "comment": "Do not submit. DCC personnel is responsible for submission of biosample external resource identifiers.",
      "permission": "admin_only",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "External Identifier",
        "description": "An identifier from external resource.",
        "type": "string",
        "pattern": "^((GEO:SAMN\\d+)|(Cellosaurus:CVCL_\\w{4})|(ENCODE:ENCBS\\d{3}[A-Z]{3}))$"
      },
      "submissionExample": {
        "appscript": "[\"GEO:SAMN34251743\", \"Cellosaurus:CVCL_0027\"]",
        "igvf_utils": "GEO:SAMN34251743, Cellosaurus:CVCL_0027"
      }
    },
    "date_obtained": {
      "title": "Date Obtained",
      "description": "The date the sample was harvested, dissected or created, depending on the type of the sample.",
      "comment": "Date should be submitted in as YYYY-MM-DD.",
      "type": "string",
      "format": "date",
      "submissionExample": {
        "appscript": "2020-09-20",
        "igvf_utils": "2020-09-20"
      }
    },
    "sorted_from": {
      "title": "Sorted From",
      "description": "Links to a larger sample from which this sample was obtained through sorting.",
      "comment": "The parent sample is expected to have similar properties to its fraction. A sample with sorted_from must include sorted_from_detail.",
      "type": "string",
      "linkTo": "Sample",
      "submissionExample": {
        "appscript": "TSTSM02881437 or john-doe:tissue01",
        "igvf_utils": "TSTSM02881437 or john-doe:tissue01"
      }
    },
    "sorted_from_detail": {
      "title": "Sorted From Detail",
      "description": "Detail for sample sorted into fractions capturing information about sorting.",
      "comment": "A sample with sorted_from_detail must include sorted_from.",
      "type": "string",
      "submissionExample": {
        "appscript": "FACS 10% expression of CTCF-GFP",
        "igvf_utils": "FACS 10% expression of CTCF-GFP"
      }
    },
    "virtual": {
      "title": "Virtual",
      "description": "Virtual samples are not representing actual physical entities from experiments, but rather capturing metadata about hypothetical samples that the reported analysis results are relevant for.",
      "comment": "For example, a prediction of a certain TF's binding profile in HepG2 cells should not be associated with an actual batch of HepG2 cells, but with a virtual sample of HepG2 cells, making it clear that the reported prediction is not directly associated with an actual HepG2 sample in a specific lab and experiment.",
      "type": "boolean",
      "default": false,
      "submissionExample": {
        "appscript": false,
        "igvf_utils": false
      }
    },
    "construct_library_sets": {
      "title": "Construct Library Sets",
      "description": "The construct library sets of vectors introduced to this sample prior to performing an assay.",
      "comment": "See construct_library_set.json for available identifiers.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Construct Library Set",
        "type": "string",
        "linkTo": "ConstructLibrarySet"
      },
      "submissionExample": {
        "appscript": "[\"john-doe:construct_library_set01\", \"IGVFDS4284BCDE\"]",
        "igvf_utils": "john-doe:construct_library_set01, IGVFDS4284BCDE"
      }
    },
    "moi": {
      "title": "Multiplicity Of Infection",
      "description": "The actual multiplicity of infection (MOI) for vectors introduced to this sample. At least one construct library set must be specified in order to specify MOI. This property should capture the actual MOI, and not the targeted MOI.",
      "comment": "Use of this property requires construct_library_sets.",
      "type": "number",
      "minimum": 0,
      "submissionExample": {
        "appscript": 2,
        "igvf_utils": 2
      }
    },
    "nucleic_acid_delivery": {
      "title": "Nucleic Acid Delivery",
      "description": "Method of introduction of nucleic acid into the cell.",
      "type": "string",
      "enum": [
        "transfection",
        "adenoviral transduction",
        "lentiviral transduction"
      ],
      "submissionExample": {
        "appscript": "transfection",
        "igvf_utils": "transfection"
      }
    },
    "time_post_library_delivery": {
      "title": "Time Post Library Delivery",
      "description": "The time that elapsed past the time-point when the construct library sets were introduced.",
      "comment": "Use of this property requires time_post_library_delivery_units and construct_library_sets.",
      "type": "number",
      "submissionExample": {
        "appscript": 20,
        "igvf_utils": 20
      }
    },
    "time_post_library_delivery_units": {
      "title": "Time Post Library Delivery Units",
      "description": "The units of time that elapsed past the point when the construct library sets were introduced.",
      "comment": "Use of this property requires time_post_library_delivery and construct_library_sets.",
      "type": "string",
      "enum": [
        "minute",
        "hour",
        "day",
        "week",
        "month"
      ],
      "submissionExample": {
        "appscript": "minute",
        "igvf_utils": "minute"
      }
    },
    "protocols": {
      "title": "Protocols",
      "description": "Links to the protocol(s) for preparing the samples on Protocols.io.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Protocol",
        "type": "string",
        "pattern": "^https://www\\.protocols\\.io/(\\S+)$"
      },
      "submissionExample": {
        "appscript": "[\"https://www.protocols.io/link/to/protocol\",\"https://www.protocols.io/link/to/protocol2\"]",
        "igvf_utils": "https://www.protocols.io/link/to/protocol,https://www.protocols.io/link/to/protocol2"
      }
    },
    "sample_name": {
      "title": "Sample Name",
      "description": "Text-based term identifying the cell line (e.g. EndoC-Bh1, EndoC-Bh2, EndoC-Bh3).",
      "type": "string",
      "submissionExample": {
        "appscript": "EndoC-Bh1",
        "igvf_utils": "EndoC-Bh1"
      }
    },
    "classifications": {
      "title": "Classifications",
      "description": "Type of cell (cell line only option, used for compatibility with other schemas).",
      "type": "array",
      "minItems": 1,
      "maxItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Classification",
        "type": "string",
        "enum": [
          "cell line"
        ]
      },
      "submissionExample": {
        "appscript": "[\"cell line\"]",
        "igvf_utils": "cell line"
      }
    },
    "passage_number": {
      "title": "Passage Number",
      "description": "Number of passages from source.",
      "type": "integer",
      "minimum": 0,
      "submissionExample": {
        "appscript": 15,
        "igvf_utils": 15
      }
    },
    "growth_medium": {
      "title": "Growth Medium",
      "description": "Growth media used in the in vitro system to culture cell line biosample.",
      "type": "string",
      "submissionExample": {
        "appscript": "CMRL-1066 medium supplemented with 10% FBS and 1% penicillin/streptomycin",
        "igvf_utils": "CMRL-1066 medium supplemented with 10% FBS and 1% penicillin/streptomycin"
      }
    },
    "date_harvested": {
      "title": "Date Harvested",
      "description": "Date sample was harvested for assay.",
      "type": "string",
      "format": "date",
      "submissionExample": {
        "appscript": "2023-10-15",
        "igvf_utils": "2023-10-15"
      }
    },
    "authentication": {
      "title": "Authentication",
      "description": "Method for authentication performed on cell line biosample.",
      "type": "string",
      "submissionExample": {
        "appscript": "STR profiling",
        "igvf_utils": "STR profiling"
      }
    },
    "file_sets": {
      "title": "File Sets",
      "type": "array",
      "description": "The file sets linked to this sample.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "File Set",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "FileSet.samples"
      },
      "notSubmittable": true
    },
    "parts": {
      "title": "Parts",
      "type": "array",
      "description": "The parts into which this sample has been divided.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Part",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "HumanBetaCellLine.part_of"
      },
      "notSubmittable": true
    },
    "pooled_in": {
      "title": "Pooled In",
      "type": "array",
      "description": "The pooled samples in which this sample is included.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Pooled In Sample",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "Sample.pooled_from"
      },
      "notSubmittable": true
    },
    "demultiplexed_to": {
      "title": "Demultiplexed To",
      "type": "array",
      "description": "The parts into which this sample has been demultiplexed.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Demultiplexed Sample",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "Sample.demultiplexed_from"
      },
      "notSubmittable": true
    },
    "multiplexed_in": {
      "title": "Multiplexed In",
      "type": "array",
      "description": "The multiplexed samples this sample is part of.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Multiplexed Sample",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "Sample.multiplexed_from"
      },
      "notSubmittable": true
    },
    "sorted_fractions": {
      "title": "Sorted Fractions",
      "type": "array",
      "description": "The fractions into which this sample has been sorted.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Sorted Fraction",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "Sample.sorted_from"
      },
      "notSubmittable": true
    },
    "@id": {
      "title": "ID",
      "type": "string",
      "notSubmittable": true
    },
    "@type": {
      "title": "Type",
      "type": "array",
      "items": {
        "type": "string"
      },
      "notSubmittable": true
    },
    "summary": {
      "title": "Summary",
      "type": "string",
      "description": "A summary of the sample.",
      "notSubmittable": true
    },
    "origin_of": {
      "title": "Origin Sample Of",
      "type": "array",
      "description": "The samples which originate from this sample, such as through a process of cell differentiation.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Originated Sample",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "InVitroSystem.originated_from"
      },
      "notSubmittable": true
    },
    "institutional_certificates": {
      "title": "Institutional Certificates",
      "type": "array",
      "description": "The institutional certificates under which use of this sample is approved.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "title": "Institutional Certificate",
        "type": [
          "string",
          "object"
        ],
        "linkFrom": "InstitutionalCertificate.samples"
      },
      "notSubmittable": true
    },
    "sex": {
      "title": "Sex",
      "type": "string",
      "enum": [
        "female",
        "male",
        "mixed",
        "unspecified"
      ],
      "notSubmittable": true
    },
    "age": {
      "title": "Age",
      "description": "Age of organism at the time of collection of the sample.",
      "type": "string",
      "pattern": "^((\\d+(\\.[1-9])?(\\-\\d+(\\.[1-9])?)?)|(unknown)|([1-8]?\\d)|(90 or above))$",
      "notSubmittable": true
    },
    "upper_bound_age_in_hours": {
      "title": "Upper Bound Age In Hours",
      "description": "Upper bound of age of organism in hours at the time of collection of the sample.",
      "type": "number",
      "notSubmittable": true
    },
    "lower_bound_age_in_hours": {
      "title": "Lower Bound Age In Hours",
      "description": "Lower bound of age of organism in hours at the time of collection of the sample .",
      "type": "number",
      "notSubmittable": true
    }
  },
  "fuzzy_searchable_fields": [
    "description",
    "summary",
    "sample_name",
    "growth_medium",
    "authentication",
    "submitted_by.title",
    "taxa"
  ],
  "exact_searchable_fields": [
    "@type",
    "dbxrefs",
    "institutional_certificates.certificate_identifier",
    "classifications"
  ],
  "changelog": "/profiles/changelogs/human_beta_cell_line.md",
  "@type": [
    "JSONSchema"
  ]
}